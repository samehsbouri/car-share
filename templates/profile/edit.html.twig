<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier mon profil</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">

    <!-- Bootstrap CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <!-- Custom Styles -->
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
            color: #333;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        .navbar {
            background: linear-gradient(45deg, #4e54c8, #8f94fb);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 600;
            color: white !important;
        }
        .navbar-nav .nav-link {
            color: rgba(255, 255, 255, 0.8) !important;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        .navbar-nav .nav-link:hover {
            color: white !important;
            transform: translateY(-2px);
        }
        .gradient-primary {
            background: linear-gradient(45deg, #4e54c8, #8f94fb);
        }
        .card {
            border: none;
            border-radius: 1rem;
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1) !important;
        }
        .card-header {
            background: linear-gradient(45deg, #4e54c8, #8f94fb);
            color: white;
            border-radius: 1rem 1rem 0 0 !important;
            padding: 1.5rem;
        }
        .profile-image-container {
            width: 150px;
            height: 150px;
            margin: 0 auto;
            position: relative;
        }
        .profile-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border: 4px solid white;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        .profile-image:hover {
            transform: scale(1.05);
        }
        .form-control {
            border-radius: 0.75rem;
            padding: 0.75rem 1.25rem;
            border: 2px solid #e0e0e0;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: #4e54c8;
            box-shadow: 0 0 0 0.25rem rgba(78, 84, 200, 0.1);
        }
        .btn {
            border-radius: 2rem;
            padding: 0.75rem 1.5rem;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        .btn-primary {
            background: linear-gradient(45deg, #4e54c8, #8f94fb);
            border: none;
        }
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .password-strength-meter {
            height: 4px;
            background: #eee;
            border-radius: 2px;
            margin-top: 0.5rem;
        }
        .password-strength-meter div {
            height: 100%;
            border-radius: 2px;
            transition: all 0.3s ease;
        }
        .strength-weak { width: 25%; background: #ff4444; }
        .strength-medium { width: 50%; background: #ffbb33; }
        .strength-good { width: 75%; background: #00C851; }
        .strength-strong { width: 100%; background: #007E33; }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }
        .footer {
            background: linear-gradient(45deg, #4e54c8, #8f94fb);
            color: white;
            padding: 2rem 0;
            text-align: center;
            margin-top: auto;
        }
    </style>
</head>
<body>
<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
        <a class="navbar-brand" href="{{ path('app_home') }}">CarShare</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('app_home') }}">Accueil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('app_trajet_index') }}">Trips</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('app_vehicule_index') }}">Véhicules</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('app_reservation_index') }}">Réservation</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ path('app_avis_index') }}">Avis</a>
                </li>
            </ul>
            <ul class="navbar-nav">
                {% if app.user %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_profile') }}">Mon Profil</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_logout') }}">Déconnexion</a>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_login') }}">Connexion</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_register') }}">Inscription</a>
                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content -->
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4 animate-fade-in">
                <h1 class="h2 mb-0">Modifier mon profil</h1>
                <a href="{{ path('app_profile') }}" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Retour
                </a>
            </div>

            <!-- Alerts -->
            {% for type, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ type }} alert-dismissible fade show mb-4 animate-fade-in" role="alert">
                        <i class="fas fa-info-circle me-2"></i>{{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                {% endfor %}
            {% endfor %}

            <!-- Profile Form Card -->
            <div class="card mb-4 shadow-sm animate-fade-in">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-user-edit me-2"></i>Informations personnelles</h5>
                </div>
                <div class="card-body">
                    <form class="needs-validation" novalidate>
                        <!-- Profile Image Section -->
                        <div class="text-center mb-4">
                            <div class="profile-image-container">
                                {% if app.user.photo %}
                                    <img src="/uploads/users/{{ app.user.photo }}"
                                         alt="Photo de profil"
                                         class="profile-image rounded-circle"
                                         id="current-profile-image">
                                {% else %}
                                    <img src="/images/default-avatar.png"
                                         alt="Photo par défaut"
                                         class="profile-image rounded-circle"
                                         id="current-profile-image">
                                {% endif %}
                            </div>

                            <div class="mt-3">
                                <label for="profile-photo" class="btn btn-outline-primary">
                                    <i class="fas fa-camera me-2"></i>Changer la photo
                                </label>
                                <input type="file" id="profile-photo" class="d-none" accept="image/*">
                                <div class="mt-2">
                                    <small class="text-muted">
                                        Formats acceptés : JPG, PNG. Taille maximale : 2 Mo
                                    </small>
                                </div>
                            </div>
                        </div>

                        <!-- Form Fields -->
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="nom" class="form-label">Nom</label>
                                <input type="text" class="form-control" id="nom" value="{{ app.user.nom }}" required>
                            </div>
                            <div class="col-md-6">
                                <label for="prenom" class="form-label">Prénom</label>
                                <input type="text" class="form-control" id="prenom" value="{{ app.user.prenom }}" required>
                            </div>
                            <div class="col-md-6">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" value="{{ app.user.email }}" required>
                            </div>
                            <div class="col-md-6">
                                <label for="telephone" class="form-label">Téléphone</label>
                                <input type="tel" class="form-control" id="telephone" value="{{ app.user.telephone }}">
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Enregistrer
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Password Change Card -->
            <div class="card shadow-sm animate-fade-in">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-key me-2"></i>Modifier le mot de passe</h5>
                </div>
                <div class="card-body">
                    <form id="password-form" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label class="form-label">Mot de passe actuel</label>
                            <input type="password" class="form-control" id="current-password" required>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Nouveau mot de passe</label>
                            <input type="password" class="form-control" id="new-password" required>
                            <div class="password-strength-meter mt-2">
                                <div id="strength-meter"></div>
                            </div>
                            <small class="text-muted">Force du mot de passe: <span id="strength-text">Faible</span></small>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Confirmer le nouveau mot de passe</label>
                            <input type="password" class="form-control" id="confirm-password" required>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-key me-2"></i>Changer le mot de passe
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Footer -->
<footer class="footer">
    <div class="container">
        <p>&copy; 2024 CarShare. Tous droits réservés.</p>
    </div>
</footer>

<!-- Bootstrap JS CDN -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Custom JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Gestion de l'aperçu de l'image avec validation améliorée
        const photoInput = document.getElementById('profile-photo');
        const currentImage = document.getElementById('current-profile-image');
        const maxSize = 2 * 1024 * 1024; // 2MB en octets

        if (photoInput) {
            photoInput.addEventListener('change', function(e) {
                const file = this.files[0];
                if (file) {
                    // Validation de la taille
                    if (file.size > maxSize) {
                        alert('La taille du fichier ne doit pas dépasser 2 Mo');
                        this.value = '';
                        return;
                    }

                    // Validation du type de fichier
                    if (!file.type.match('image/(jpeg|png)')) {
                        alert('Seuls les formats JPG et PNG sont acceptés');
                        this.value = '';
                        return;
                    }

                    // Aperçu de l'image
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        currentImage.src = e.target.result;
                        currentImage.classList.remove('animate-fade-in');
                        void currentImage.offsetWidth; // Force reflow
                        currentImage.classList.add('animate-fade-in');
                    };
                    reader.onerror = function() {
                        alert('Erreur lors de la lecture du fichier');
                        this.value = '';
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        // Gestion de la force du mot de passe
        const newPassword = document.getElementById('new-password');
        const strengthMeter = document.getElementById('strength-meter');
        const strengthText = document.getElementById('strength-text');

        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 8) strength++;
            if (password.match(/[a-z]+/)) strength++;
            if (password.match(/[A-Z]+/)) strength++;
            if (password.match(/[0-9]+/)) strength++;
            if (password.match(/[^a-zA-Z0-9]+/)) strength++;
            return strength;
        }

        if (newPassword) {
            newPassword.addEventListener('input', function() {
                const strength = checkPasswordStrength(this.value);
                const strengthClasses = ['strength-weak', 'strength-medium', 'strength-good', 'strength-strong'];
                const strengthTexts = ['Faible', 'Moyen', 'Bon', 'Fort'];

                strengthMeter.className = '';
                if (strength > 0) {
                    strengthMeter.classList.add(strengthClasses[Math.min(strength - 1, 3)]);
                    strengthText.textContent = strengthTexts[Math.min(strength - 1, 3)];
                } else {
                    strengthText.textContent = 'Faible';
                }
            });
        }

        // Gestion du formulaire de changement de mot de passe
        const passwordForm = document.getElementById('password-form');
        if (passwordForm) {
            passwordForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                try {
                    const currentPassword = document.getElementById('current-password').value;
                    const newPassword = document.getElementById('new-password').value;
                    const confirmPassword = document.getElementById('confirm-password').value;

                    // Validation côté client
                    if (!currentPassword || !newPassword || !confirmPassword) {
                        showAlert('danger', 'Tous les champs sont obligatoires');
                        return;
                    }

                    if (newPassword !== confirmPassword) {
                        showAlert('danger', 'Les mots de passe ne correspondent pas');
                        return;
                    }

                    if (newPassword.length < 8) {
                        showAlert('danger', 'Le mot de passe doit contenir au moins 8 caractères');
                        return;
                    }

                    const response = await fetch('/profile/api/change-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                        },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword
                        })
                    });

                    const data = await response.json();

                    if (response.ok && data.success) {
                        showAlert('success', 'Mot de passe modifié avec succès');
                        passwordForm.reset();
                        strengthMeter.className = '';
                        strengthText.textContent = 'Faible';

                        // Redirection après 2 secondes
                        setTimeout(() => {
                            window.location.href = "{{ path('app_profile') }}";
                        }, 2000);
                    } else {
                        showAlert('danger', data.message || 'Une erreur est survenue');
                    }
                } catch (error) {
                    console.error('Erreur:', error);
                    showAlert('danger', 'Une erreur est survenue lors de la communication avec le serveur');
                }
            });
        }

        // Fonction d'affichage des alertes
        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show animate-fade-in`;
            alertDiv.innerHTML = `
                    <div class="d-flex align-items-center">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                        <div>${message}</div>
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;

            const cardBody = passwordForm.closest('.card-body');
            cardBody.insertBefore(alertDiv, passwordForm);

            // Auto-suppression après 5 secondes
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }
    });
</script>
</body>
</html>